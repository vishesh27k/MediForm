{
  "privadoCoreVersion" : "1.1.81",
  "privadoCLIVersion" : "v2.1.2",
  "privadoMainVersion" : "1.3.31\n",
  "privadoLanguageEngineVersion" : "2.0.52",
  "createdAt" : 1693491725369,
  "repoName" : "MediForm",
  "language" : "java",
  "gitMetadata" : {
    "branchName" : "main",
    "commitId" : "6416b9ba70ef109e37da61dca765e6d853972775",
    "remoteUrl" : "git@github.com:vishesh27k/MediForm.git"
  },
  "localScanPath" : "/Users/vishesh/privado/demorepo/MediForm",
  "probableSinks" : [
    "com.mongodb.client.model.Filters.eq",
    "DatabaseInterface.fromProviders",
    "org.bson.codecs.pojo.PojoCodecProvider.builder",
    "DatabaseInterface.fromRegistries",
    "org.bson.codecs.configuration.CodecRegistry.retryWrites",
    "javafx.fxml.FXMLLoader.<init>",
    "javafx.fxml.FXMLLoader.setLocation",
    "Main.getClass",
    "javafx.fxml.FXMLLoader.load",
    "javafx.stage.Stage.setTitle",
    "javafx.stage.Stage.setScene",
    "javafx.scene.Scene.<init>",
    "javafx.stage.Stage.show",
    "Main.launch",
    "org.bson.types.ObjectId.<init>",
    "billController.getClass",
    "javafx.event.ActionEvent.getSource",
    "javafx.scene.control.TextField.setText",
    "javafx.scene.control.CheckBox.isSelected",
    "diagnoseController.getClass",
    "javafx.scene.control.CheckBox.setSelected",
    "javafx.scene.control.TextField.getText",
    "javafx.scene.control.Alert.<init>",
    "javafx.scene.control.Alert.showAndWait",
    "enterIDController.getClass",
    "javafx.scene.control.PasswordField.getText",
    "loginController.getClass",
    "nurseMedicalFormController.getClass",
    "nurseMenuController.getClass",
    "orderMedsController.getClass",
    "orderTestController.getClass",
    "physicianMedicalFormController.getClass",
    "physicianMenuController.getClass",
    "printDischargeController.getClass",
    "regHomeController.getClass",
    "regNewPatientController.getClass",
    "javafx.scene.control.TextArea.setText",
    "viewNotesController.getClass",
    "viewRegFormController.getClass"
  ],
  "violations" : [
    {
      "policyId" : "Threats.Leakage.isDataLeakingToLog",
      "policyDetails" : {
        "name" : "PII data is written to the log files",
        "policyType" : "threat",
        "description" : "Sensitive Data written to log files or file system may lead to unauthorized access or exposure to potential attack.",
        "fix" : "It is not recommended to log Sensitive Data to log files or the file system. The data must be encrypted if it is absolutely necessary to log it.",
        "action" : "",
        "tags" : {
          "CWE-359" : "https://cwe.mitre.org/data/definitions/359.html",
          "CWE-532" : "https://cwe.mitre.org/data/definitions/532.html",
          "MSTG-STORAGE-3" : "https://github.com/OWASP/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#Testing-Logs-for-Sensitive-Data-MSTG-STORAGE-3",
          "MITRE" : "Sharing.Exposure"
        }
      },
      "dataFlow" : [
        {
          "sourceId" : "Data.Sensitive.AccountData.AccountID",
          "sinkId" : "Leakages.Log.Console",
          "pathIds" : [
            "7374-7354-7386-2107-2110-2109-2115-7385-7381",
            "65-5-96-95-99-7389-7388-7397-7403-7415-2107-2110-2109-2115-7414-7410",
            "74-73-75-8630-7391-7401-7420-7416"
          ]
        },
        {
          "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
          "sinkId" : "Leakages.Log.Console",
          "pathIds" : [
            "7233-7254-7250-7249-7261-7208-7268-7265-7264-7270-7276-7295-7294-7293-7288-7210-7307-7306-7305-7312-7311-7319-7318-7317-7324-7320"
          ]
        }
      ],
      "processing" : null
    },
    {
      "policyId" : "Threats.Leakage.isDataLeakingToLog",
      "policyDetails" : {
        "name" : "PII data is written to the log files",
        "policyType" : "threat",
        "description" : "Sensitive Data written to log files or file system may lead to unauthorized access or exposure to potential attack.",
        "fix" : "It is not recommended to log Sensitive Data to log files or the file system. The data must be encrypted if it is absolutely necessary to log it.",
        "action" : "",
        "tags" : {
          "CWE-359" : "https://cwe.mitre.org/data/definitions/359.html",
          "CWE-532" : "https://cwe.mitre.org/data/definitions/532.html",
          "MSTG-STORAGE-3" : "https://github.com/OWASP/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#Testing-Logs-for-Sensitive-Data-MSTG-STORAGE-3",
          "MITRE" : "Sharing.Exposure"
        }
      },
      "dataFlow" : [
        {
          "sourceId" : "Data.Sensitive.AccountData.AccountID",
          "sinkId" : "Leakages.Log.Console",
          "pathIds" : [
            "7374-7354-7386-2107-2110-2109-2115-7385-7381",
            "65-5-96-95-99-7389-7388-7397-7403-7415-2107-2110-2109-2115-7414-7410",
            "74-73-75-8630-7391-7401-7420-7416"
          ]
        },
        {
          "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
          "sinkId" : "Leakages.Log.Console",
          "pathIds" : [
            "7233-7254-7250-7249-7261-7208-7268-7265-7264-7270-7276-7295-7294-7293-7288-7210-7307-7306-7305-7312-7311-7319-7318-7317-7324-7320"
          ]
        }
      ],
      "processing" : null
    }
  ],
  "sources" : [
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.AccountID",
      "name" : "Account ID",
      "category" : "Account Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.LocationData.PreciseLocation",
      "name" : "Precise Location",
      "category" : "Location Data",
      "sensitivity" : "high",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.FirstName",
      "name" : "First Name",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.AccountPassword",
      "name" : "Account Password",
      "category" : "Account Data",
      "sensitivity" : "high",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.DateofBirth",
      "name" : "Date of Birth",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.PersonalIdentification.LastName",
      "name" : "Last Name",
      "category" : "Personal Identification",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.ContactData.EmergencyContactDetails",
      "name" : "Emergency Contact Details",
      "category" : "Contact Data",
      "sensitivity" : "low",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.NationalIdentificationNumbers.DrivingLicense",
      "name" : "Driving License",
      "category" : "National Identification Numbers",
      "sensitivity" : "high",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.ContactData.Address",
      "name" : "Address",
      "category" : "Contact Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.HealthData.DisabilityorSpecificCondition",
      "name" : "Disability or Specific Condition",
      "category" : "Health Data",
      "sensitivity" : "high",
      "isSensitive" : true,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.ContactData.PhoneNumber",
      "name" : "Phone Number",
      "category" : "Contact Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    },
    {
      "sourceType" : "Data Element",
      "id" : "Data.Sensitive.AccountData.AccountName",
      "name" : "Account Name",
      "category" : "Account Data",
      "sensitivity" : "medium",
      "isSensitive" : false,
      "tags" : {
        "law" : "GDPR"
      }
    }
  ],
  "collections" : [
  ],
  "sinks" : [
    {
      "sourceType" : "Sinks",
      "sinkType" : "miscellaneous",
      "id" : "Miscellaneous.Threats.AndroidNotification",
      "name" : "Android Notification",
      "domains" : [
      ],
      "apiUrl" : [
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : "",
        "configFile" : "",
        "schema" : null
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "internal_apis",
      "id" : "Sinks.API.InternalAPI",
      "name" : "Internal APIs",
      "domains" : [
      ],
      "apiUrl" : [
        "\"http://localhost/endpoint?lat=\""
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : "",
        "configFile" : "",
        "schema" : null
      }
    },
    {
      "sourceType" : "Sinks",
      "sinkType" : "third_parties",
      "id" : "Sinks.ThirdParties.API",
      "name" : "Third Party API",
      "domains" : [
      ],
      "apiUrl" : [
        "API"
      ],
      "databaseDetails" : {
        "dbName" : "",
        "dbVendor" : "",
        "dbLocation" : "",
        "dbOperation" : "",
        "configFile" : "",
        "schema" : null
      }
    }
  ],
  "processing" : [
    {
      "sourceId" : "Data.Sensitive.ContactData.Address",
      "occurrences" : [
        {
          "sample" : "this.address",
          "lineNumber" : 221,
          "columnNumber" : 16,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "    }\n\n    //regForm\n    //get and set Address\n    public String getAddress() {\n        return address; /* <===  */ \n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }"
        },
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.AccountData.AccountPassword",
      "occurrences" : [
        {
          "sample" : "this.password",
          "lineNumber" : 36,
          "columnNumber" : 13,
          "fileName" : "MediForm/src/main/java/loginController.java",
          "excerpt" : "        }\n        \n        Main.user = DatabaseInterface.findUser(username.getText());\n\n        //check entered pass against database pas\n        if(!password.getText().equals(Main.user.getPassword()) || !username.getText().equals(Main.user.getUsername())) { /* <===  */ \n            Alert alert = new Alert(Alert.AlertType.ERROR);\n            alert.setContentText(\"Username or password was invalid. Please try again.\");\n            alert.showAndWait();\n            return;\n        }"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.AccountData.AccountName",
      "occurrences" : [
        {
          "sample" : "this.username",
          "lineNumber" : 33,
          "columnNumber" : 48,
          "fileName" : "MediForm/src/main/java/loginController.java",
          "excerpt" : "            alert1.setContentText(\"Username or Password field is empty.\");\n            alert1.showAndWait();\n            return;\n        }\n        \n        Main.user = DatabaseInterface.findUser(username.getText()); /* <===  */ \n\n        //check entered pass against database pas\n        if(!password.getText().equals(Main.user.getPassword()) || !username.getText().equals(Main.user.getUsername())) {\n            Alert alert = new Alert(Alert.AlertType.ERROR);\n            alert.setContentText(\"Username or password was invalid. Please try again.\");"
        },
        {
          "sample" : "username",
          "lineNumber" : 59,
          "columnNumber" : 35,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "\n    public static User findUser(String username) {\n        User userReturn = new User();\n\n        BasicDBObject whereUser = new BasicDBObject();\n        whereUser.put(\"username\", username); /* <=== java.lang.String */ \n\n        try (MongoCursor<User> cursorUser = collectionUser.find(whereUser).iterator()) {\n            while (cursorUser.hasNext()) {\n                userReturn = cursorUser.next();\n            }"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.ContactData.EmergencyContactDetails",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "patientCopy",
          "lineNumber" : 117,
          "columnNumber" : 33,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "        this.pain = patientCopy.getPain();\n        this.anticoagulant = patientCopy.getAnticoagulant();\n        this.antiretroviral = patientCopy.getAntiretroviral();\n        this.betaBlocker = patientCopy.getBetaBlocker();\n        this.insulin = patientCopy.getInsulin();\n        this.antiInflammatory = patientCopy.getAntiInflammatory(); /* <=== Patient */ \n        this.ursodiol = patientCopy.getUrsodiol();\n        this.calciumReducer = patientCopy.getCalciumReducer();\n\n        this.nucleicAcid = patientCopy.getNucleicAcid();\n        this.coagulationPanel = patientCopy.getCoagulationPanel();"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.FirstName",
      "occurrences" : [
        {
          "sample" : "this.firstName",
          "lineNumber" : 47,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/printDischargeController.java",
          "excerpt" : "    \n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        String name = Main.patient.getName();\n        String[] nameSplit = name.split(\" \");\n        firstName.setText(nameSplit[0]); /* <===  */ \n        lastName.setText(nameSplit[1]);\n    }\n}"
        },
        {
          "sample" : "javafx.scene.control.TextField firstName",
          "lineNumber" : 17,
          "columnNumber" : 23,
          "fileName" : "MediForm/src/main/java/billController.java",
          "excerpt" : "import java.net.URL;\nimport java.util.ResourceBundle;\n\npublic class billController implements Initializable{\n    @FXML\n    private TextField firstName; /* <===  */ \n\n    @FXML\n    private TextField lastName;\n\n    @FXML"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 152,
          "columnNumber" : 23,
          "fileName" : "MediForm/src/main/java/physicianMedicalFormController.java",
          "excerpt" : "            sb.append(Main.patient.getAnticoagulant());\n            sb.append(\"; \");\n        }\n        if(Main.patient.getBetaBlocker() != 0) {\n            sb.append(\"Beta Blocker: \");\n            sb.append(Main.patient.getBetaBlocker()); /* <=== Main */ \n            sb.append(\"; \");\n        }\n        if(Main.patient.getAntiretroviral() != 0) {\n            sb.append(\"Antiretroviral: \");\n            sb.append(Main.patient.getAntiretroviral());"
        },
        {
          "sample" : "latitude",
          "lineNumber" : 14,
          "columnNumber" : 64,
          "fileName" : "MediForm/src/main/java/slack.java",
          "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.LastName",
      "occurrences" : [
        {
          "sample" : "this.lastName",
          "lineNumber" : 52,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/billController.java",
          "excerpt" : "    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        String name = Main.patient.getName();\n        String[] nameSplit = name.split(\" \");\n        firstName.setText(nameSplit[0]);\n        lastName.setText(nameSplit[1]); /* <===  */ \n        patientID.setText(Main.patient.getPatientID());\n\n        Main.patient.calculatePrices();\n\n        medCost.setText(Integer.toString(Main.patient.getPriceMed()));"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.ContactData.PhoneNumber",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "patientCopy",
          "lineNumber" : 117,
          "columnNumber" : 33,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "        this.pain = patientCopy.getPain();\n        this.anticoagulant = patientCopy.getAnticoagulant();\n        this.antiretroviral = patientCopy.getAntiretroviral();\n        this.betaBlocker = patientCopy.getBetaBlocker();\n        this.insulin = patientCopy.getInsulin();\n        this.antiInflammatory = patientCopy.getAntiInflammatory(); /* <=== Patient */ \n        this.ursodiol = patientCopy.getUrsodiol();\n        this.calciumReducer = patientCopy.getCalciumReducer();\n\n        this.nucleicAcid = patientCopy.getNucleicAcid();\n        this.coagulationPanel = patientCopy.getCoagulationPanel();"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.NationalIdentificationNumbers.DrivingLicense",
      "occurrences" : [
        {
          "sample" : "drivingLicence",
          "lineNumber" : 11,
          "columnNumber" : 16,
          "fileName" : "MediForm/src/main/java/slack.java",
          "excerpt" : "\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value /* <=== double */ \n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.PersonalIdentification.DateofBirth",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "patientCopy",
          "lineNumber" : 117,
          "columnNumber" : 33,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "        this.pain = patientCopy.getPain();\n        this.anticoagulant = patientCopy.getAnticoagulant();\n        this.antiretroviral = patientCopy.getAntiretroviral();\n        this.betaBlocker = patientCopy.getBetaBlocker();\n        this.insulin = patientCopy.getInsulin();\n        this.antiInflammatory = patientCopy.getAntiInflammatory(); /* <=== Patient */ \n        this.ursodiol = patientCopy.getUrsodiol();\n        this.calciumReducer = patientCopy.getCalciumReducer();\n\n        this.nucleicAcid = patientCopy.getNucleicAcid();\n        this.coagulationPanel = patientCopy.getCoagulationPanel();"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.HealthData.DisabilityorSpecificCondition",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "this.hivAids",
          "lineNumber" : 75,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/diagnoseController.java",
          "excerpt" : "    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        brokenBone.setSelected(Main.patient.getBrokenBone());\n        heartAttack.setSelected(Main.patient.getHeartAttack());\n        laceration.setSelected(Main.patient.getLaceration());\n        hivAids.setSelected(Main.patient.getHivAIDS()); /* <===  */ \n        liverFailure.setSelected(Main.patient.getLiverFailure());\n        kidneyFailure.setSelected(Main.patient.getKidneyFailure());\n        diabetes.setSelected(Main.patient.getDiabetes());\n        inflammatoryBowlDisease.setSelected(Main.patient.getInfammatoryBowlDisease());\n        stroke.setSelected(Main.patient.getStroke());"
        },
        {
          "sample" : "patientCopy",
          "lineNumber" : 117,
          "columnNumber" : 33,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "        this.pain = patientCopy.getPain();\n        this.anticoagulant = patientCopy.getAnticoagulant();\n        this.antiretroviral = patientCopy.getAntiretroviral();\n        this.betaBlocker = patientCopy.getBetaBlocker();\n        this.insulin = patientCopy.getInsulin();\n        this.antiInflammatory = patientCopy.getAntiInflammatory(); /* <=== Patient */ \n        this.ursodiol = patientCopy.getUrsodiol();\n        this.calciumReducer = patientCopy.getCalciumReducer();\n\n        this.nucleicAcid = patientCopy.getNucleicAcid();\n        this.coagulationPanel = patientCopy.getCoagulationPanel();"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    },
    {
      "sourceId" : "Data.Sensitive.AccountData.AccountID",
      "occurrences" : [
        {
          "sample" : "Main",
          "lineNumber" : 28,
          "columnNumber" : 47,
          "fileName" : "MediForm/src/main/java/viewNotesController.java",
          "excerpt" : "    private TextField addNote;\n\n    @FXML\n    void add(ActionEvent event) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        if(Main.patient.getNotes() != null || Main.patient.getNotes() != \"\") { /* <=== Main */ \n            sb.append(Main.patient.getNotes());\n            sb.append(\"\\r\\n\");\n        }\n        \n        sb.append(addNote.getText());"
        },
        {
          "sample" : "Main.patient",
          "lineNumber" : 200,
          "columnNumber" : 12,
          "fileName" : "MediForm/src/main/java/nurseMedicalFormController.java",
          "excerpt" : "            sb.append(\"Kidney Failure; \");\n        if(Main.patient.getDiabetes())\n            sb.append(\"Diabetes; \");\n        if(Main.patient.getInfammatoryBowlDisease())\n            sb.append(\"Inflammatory bowl disease; \");\n        if(Main.patient.getStroke()) /* <===  */ \n            sb.append(\"Stroke; \");\n        if(Main.patient.getTornMuscleTendon())\n            sb.append(\"Torn muscle/Tendon; \");\n\n        diagnosis1.setText(sb.toString());"
        },
        {
          "sample" : "patientUpdate",
          "lineNumber" : 52,
          "columnNumber" : 46,
          "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
          "excerpt" : "    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);\n        collectionPatient.replaceOne(filter, patientUpdate); /* <=== Patient */ \n    }\n\n    public static User findUser(String username) {\n        User userReturn = new User();\n"
        },
        {
          "sample" : "pat",
          "lineNumber" : 8,
          "columnNumber" : 9,
          "fileName" : "MediForm/src/main/java/test.java",
          "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
        },
        {
          "sample" : "patientCopy",
          "lineNumber" : 117,
          "columnNumber" : 33,
          "fileName" : "MediForm/src/main/java/Patient.java",
          "excerpt" : "        this.pain = patientCopy.getPain();\n        this.anticoagulant = patientCopy.getAnticoagulant();\n        this.antiretroviral = patientCopy.getAntiretroviral();\n        this.betaBlocker = patientCopy.getBetaBlocker();\n        this.insulin = patientCopy.getInsulin();\n        this.antiInflammatory = patientCopy.getAntiInflammatory(); /* <=== Patient */ \n        this.ursodiol = patientCopy.getUrsodiol();\n        this.calciumReducer = patientCopy.getCalciumReducer();\n\n        this.nucleicAcid = patientCopy.getNucleicAcid();\n        this.coagulationPanel = patientCopy.getCoagulationPanel();"
        },
        {
          "sample" : "javafx.scene.control.TextField patientID",
          "lineNumber" : 18,
          "columnNumber" : 23,
          "fileName" : "MediForm/src/main/java/enterIDController.java",
          "excerpt" : "import java.net.URL;\nimport java.util.ResourceBundle;\n\npublic class enterIDController implements Initializable {\n    @FXML\n    private TextField patientID; /* <===  */ \n\n    @FXML\n    void toNurseMenu(ActionEvent event) throws IOException {\n        if(patientID.getText().length() == 0){\n            Alert alert1 = new Alert(Alert.AlertType.ERROR);"
        },
        {
          "sample" : "reset",
          "lineNumber" : 98,
          "columnNumber" : 17,
          "fileName" : "MediForm/src/main/java/regNewPatientController.java",
          "excerpt" : "        window.show();\n    }\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        Patient reset = new Patient(); /* <=== Patient */ \n        Main.patient = reset;\n        \n        patientID1.setText(Main.patient.getPatientID()); \n    }\n}"
        }
      ]
    }
  ],
  "sinkProcessing" : [
    {
      "sinkId" : "Sinks.API.InternalAPI",
      "occurrences" : [
        {
          "sample" : "connection.getInputStream()",
          "lineNumber" : 22,
          "columnNumber" : 82,
          "fileName" : "MediForm/src/main/java/slack.java",
          "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection.getInputStream */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
        }
      ]
    },
    {
      "sinkId" : "Miscellaneous.Threats.AndroidNotification",
      "occurrences" : [
        {
          "sample" : "setContentText(\"Patient ID field is empty.\")",
          "lineNumber" : 24,
          "columnNumber" : 13,
          "fileName" : "MediForm/src/main/java/enterIDController.java",
          "excerpt" : "\n    @FXML\n    void toNurseMenu(ActionEvent event) throws IOException {\n        if(patientID.getText().length() == 0){\n            Alert alert1 = new Alert(Alert.AlertType.ERROR);\n            alert1.setContentText(\"Patient ID field is empty.\"); /* <=== javafx.scene.control.Alert.setContentText */ \n            alert1.showAndWait();\n            return;\n        }\n                \n        Main.patient = DatabaseInterface.findPatient(patientID.getText());"
        },
        {
          "sample" : "setContentText(\"Username or password was invalid. Please try again.\")",
          "lineNumber" : 38,
          "columnNumber" : 13,
          "fileName" : "MediForm/src/main/java/loginController.java",
          "excerpt" : "        Main.user = DatabaseInterface.findUser(username.getText());\n\n        //check entered pass against database pas\n        if(!password.getText().equals(Main.user.getPassword()) || !username.getText().equals(Main.user.getUsername())) {\n            Alert alert = new Alert(Alert.AlertType.ERROR);\n            alert.setContentText(\"Username or password was invalid. Please try again.\"); /* <=== javafx.scene.control.Alert.setContentText */ \n            alert.showAndWait();\n            return;\n        }\n\n        Stage window = (Stage)((Node)event.getSource()).getScene().getWindow();"
        }
      ]
    },
    {
      "sinkId" : "Sinks.ThirdParties.API",
      "occurrences" : [
        {
          "sample" : "connection.getInputStream()",
          "lineNumber" : 22,
          "columnNumber" : 82,
          "fileName" : "MediForm/src/main/java/slack.java",
          "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection.getInputStream */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
        }
      ]
    }
  ],
  "dataFlow" : {
    "storages" : [
    ],
    "miscellaneous" : [
    ],
    "internal_apis" : [
      {
        "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
        "sinks" : [
          {
            "sinkType" : "internal_apis",
            "id" : "Sinks.API.InternalAPI",
            "name" : "Internal APIs",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
              "\"http://localhost/endpoint?lat=\""
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : "",
              "configFile" : "",
              "schema" : null
            },
            "paths" : [
              {
                "pathId" : "7237-7256-7250-7249-7261-7208-7268-7265-7264-7270-7276-7295-7294",
                "path" : [
                  {
                    "sample" : "longitude",
                    "lineNumber" : 10,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "import java.io.InputStreamReader;\n\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value /* <=== double */ \n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n"
                  },
                  {
                    "sample" : "longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 85,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "\"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 29,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <===  */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 14,
                    "columnNumber" : 20,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== java.lang.String */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 16,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.lang.String */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 16,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.net.URL */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "(HttpURLConnection) url.openConnection()",
                    "lineNumber" : 17,
                    "columnNumber" : 44,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <===  */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 17,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.HttpURLConnection */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 18,
                    "columnNumber" : 13,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\"); /* <=== java.net.HttpURLConnection */ \n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 20,
                    "columnNumber" : 32,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode(); /* <=== java.net.HttpURLConnection */ \n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  },
                  {
                    "sample" : "connection.getInputStream()",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection.getInputStream */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  }
                ]
              },
              {
                "pathId" : "7233-7254-7250-7249-7261-7208-7268-7267",
                "path" : [
                  {
                    "sample" : "latitude",
                    "lineNumber" : 9,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu /* <=== double */ \n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;"
                  },
                  {
                    "sample" : "latitude",
                    "lineNumber" : 14,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "\"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 29,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <===  */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 14,
                    "columnNumber" : 20,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== java.lang.String */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 16,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.lang.String */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 16,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.net.URL */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "url.openConnection()",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL.openConnection */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "leakages" : [
      {
        "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
        "sinks" : [
          {
            "sinkType" : "leakages",
            "id" : "Leakages.Log.Console",
            "name" : "Log Console",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : "",
              "configFile" : "",
              "schema" : null
            },
            "paths" : [
              {
                "pathId" : "7233-7254-7250-7249-7261-7208-7268-7265-7264-7270-7276-7295-7294-7293-7288-7210-7307-7306-7305-7312-7311-7319-7318-7317-7324-7320",
                "path" : [
                  {
                    "sample" : "latitude",
                    "lineNumber" : 9,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu /* <=== double */ \n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;"
                  },
                  {
                    "sample" : "latitude",
                    "lineNumber" : 14,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "\"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 29,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <===  */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 14,
                    "columnNumber" : 20,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== java.lang.String */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 16,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.lang.String */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 16,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.net.URL */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "(HttpURLConnection) url.openConnection()",
                    "lineNumber" : 17,
                    "columnNumber" : 44,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <===  */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 17,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.HttpURLConnection */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 18,
                    "columnNumber" : 13,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\"); /* <=== java.net.HttpURLConnection */ \n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 20,
                    "columnNumber" : 32,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode(); /* <=== java.net.HttpURLConnection */ \n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  },
                  {
                    "sample" : "connection.getInputStream()",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection.getInputStream */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  },
                  {
                    "sample" : "$obj1",
                    "lineNumber" : -1,
                    "columnNumber" : -1,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : ""
                  },
                  {
                    "sample" : "reader",
                    "lineNumber" : 22,
                    "columnNumber" : 32,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.io.BufferedReader */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  },
                  {
                    "sample" : "reader",
                    "lineNumber" : 25,
                    "columnNumber" : 36,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) { /* <=== java.io.BufferedReader */ \n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString();\n"
                  },
                  {
                    "sample" : "reader.readLine()",
                    "lineNumber" : 25,
                    "columnNumber" : 36,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) { /* <=== java.io.BufferedReader.readLine */ \n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString();\n"
                  },
                  {
                    "sample" : "response",
                    "lineNumber" : 25,
                    "columnNumber" : 25,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) { /* <=== java.lang.String */ \n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString();\n"
                  },
                  {
                    "sample" : "response",
                    "lineNumber" : 26,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response); /* <=== java.lang.String */ \n                }\n                reader.close();\n                String apiResponse = sb.toString();\n\n                // Process the API response"
                  },
                  {
                    "sample" : "sb",
                    "lineNumber" : 26,
                    "columnNumber" : 21,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response); /* <=== java.lang.StringBuilder */ \n                }\n                reader.close();\n                String apiResponse = sb.toString();\n\n                // Process the API response"
                  },
                  {
                    "sample" : "sb",
                    "lineNumber" : 29,
                    "columnNumber" : 38,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString(); /* <=== java.lang.StringBuilder */ \n\n                // Process the API response\n                System.out.println(\"API Response: \" + apiResponse);\n            } else {\n                System.out.println(\"API Request failed with response code: \" + responseCode);"
                  },
                  {
                    "sample" : "sb.toString()",
                    "lineNumber" : 29,
                    "columnNumber" : 38,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString(); /* <=== java.lang.StringBuilder.toString */ \n\n                // Process the API response\n                System.out.println(\"API Response: \" + apiResponse);\n            } else {\n                System.out.println(\"API Request failed with response code: \" + responseCode);"
                  },
                  {
                    "sample" : "apiResponse",
                    "lineNumber" : 29,
                    "columnNumber" : 24,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }\n                reader.close();\n                String apiResponse = sb.toString(); /* <=== java.lang.String */ \n\n                // Process the API response\n                System.out.println(\"API Response: \" + apiResponse);\n            } else {\n                System.out.println(\"API Request failed with response code: \" + responseCode);"
                  },
                  {
                    "sample" : "\"API Response: \" + apiResponse",
                    "lineNumber" : 32,
                    "columnNumber" : 36,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "                }\n                reader.close();\n                String apiResponse = sb.toString();\n\n                // Process the API response\n                System.out.println(\"API Response: \" + apiResponse); /* <===  */ \n            } else {\n                System.out.println(\"API Request failed with response code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();"
                  },
                  {
                    "sample" : "System.out.println(\"API Response: \" + apiResponse)",
                    "lineNumber" : 32,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "                }\n                reader.close();\n                String apiResponse = sb.toString();\n\n                // Process the API response\n                System.out.println(\"API Response: \" + apiResponse); /* <=== java.io.PrintStream.println */ \n            } else {\n                System.out.println(\"API Request failed with response code: \" + responseCode);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId" : "Data.Sensitive.AccountData.AccountID",
        "sinks" : [
          {
            "sinkType" : "leakages",
            "id" : "Leakages.Log.Console",
            "name" : "Log Console",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : "",
              "configFile" : "",
              "schema" : null
            },
            "paths" : [
              {
                "pathId" : "7374-7354-7386-2107-2110-2109-2115-7385-7381",
                "path" : [
                  {
                    "sample" : "java.lang.String patientID",
                    "lineNumber" : 24,
                    "columnNumber" : 19,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    public String dateOfBirth;\n    public String dateOfVisit;\n\n\n    // patient variable\n    public String patientID; /* <=== 'patientID' is a member of 'Patient' class */ \n\n    //medForm variables\n    public float height;\n    public float weight;\n    public float temperature;"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 3,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "public class test {\n    public static void main(String[] args) {\n        Patient pat = new Patient(); /* <=== Patient */ \n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID);"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 3,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "public class test {\n    public static void main(String[] args) {\n        Patient pat = new Patient(); /* <=== Patient */ \n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID);"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 6,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "public class test {\n    public static void main(String[] args) {\n        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID()); /* <=== Patient */ \n\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName());\n"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 356,
                    "columnNumber" : -1,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "        this.symptoms = symptoms;\n    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() { /* <===  */ \n        return patientID;\n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;"
                  },
                  {
                    "sample" : "this.patientID",
                    "lineNumber" : 357,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() {\n        return patientID; /* <===  */ \n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;\n    }"
                  },
                  {
                    "sample" : "return patientID;",
                    "lineNumber" : 357,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() {\n        return patientID; /* <===  */ \n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;\n    }"
                  },
                  {
                    "sample" : "RET",
                    "lineNumber" : 356,
                    "columnNumber" : 12,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "        this.symptoms = symptoms;\n    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() { /* <===  */ \n        return patientID;\n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;"
                  },
                  {
                    "sample" : "pat.getPatientID()",
                    "lineNumber" : 6,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "public class test {\n    public static void main(String[] args) {\n        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID()); /* <=== Patient.getPatientID */ \n\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName());\n"
                  },
                  {
                    "sample" : "System.out.println(pat.getPatientID())",
                    "lineNumber" : 6,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "public class test {\n    public static void main(String[] args) {\n        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID()); /* <=== java.io.PrintStream.println */ \n\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName());\n"
                  }
                ]
              },
              {
                "pathId" : "65-5-96-95-99-7389-7388-7397-7403-7415-2107-2110-2109-2115-7414-7410",
                "path" : [
                  {
                    "sample" : "java.lang.String patientID",
                    "lineNumber" : 24,
                    "columnNumber" : 19,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    public String dateOfBirth;\n    public String dateOfVisit;\n\n\n    // patient variable\n    public String patientID; /* <=== 'patientID' is a member of 'Patient' class */ \n\n    //medForm variables\n    public float height;\n    public float weight;\n    public float temperature;"
                  },
                  {
                    "sample" : "patientReturn",
                    "lineNumber" : 36,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "    public static void insertPatient(Patient patientInsert) {\n        collectionPatient.insertOne(patientInsert);\n    }\n\n    public static Patient findPatient(String patientID) {  \n        Patient patientReturn = new Patient(); /* <=== Patient */ \n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID);\n\n        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {"
                  },
                  {
                    "sample" : "patientReturn",
                    "lineNumber" : 36,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "    public static void insertPatient(Patient patientInsert) {\n        collectionPatient.insertOne(patientInsert);\n    }\n\n    public static Patient findPatient(String patientID) {  \n        Patient patientReturn = new Patient(); /* <=== Patient */ \n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID);\n\n        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {"
                  },
                  {
                    "sample" : "patientReturn",
                    "lineNumber" : 46,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {\n            while (cursorPatient.hasNext()) {\n                patientReturn = cursorPatient.next();\n            }\n        }\n        return patientReturn; /* <=== Patient */ \n    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);"
                  },
                  {
                    "sample" : "return patientReturn;",
                    "lineNumber" : 46,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {\n            while (cursorPatient.hasNext()) {\n                patientReturn = cursorPatient.next();\n            }\n        }\n        return patientReturn; /* <===  */ \n    }\n\n    public static void updatePatient(Patient patientUpdate) {\n        String id = patientUpdate.getPatientID();\n        Bson filter = Filters.eq(\"patientID\", id);"
                  },
                  {
                    "sample" : "RET",
                    "lineNumber" : 35,
                    "columnNumber" : 19,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "\n    public static void insertPatient(Patient patientInsert) {\n        collectionPatient.insertOne(patientInsert);\n    }\n\n    public static Patient findPatient(String patientID) {   /* <===  */ \n        Patient patientReturn = new Patient();\n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID);\n"
                  },
                  {
                    "sample" : "DatabaseInterface.findPatient(patID)",
                    "lineNumber" : 8,
                    "columnNumber" : 15,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== DatabaseInterface.findPatient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 8,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== Patient */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 10,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName()); /* <=== Patient */ \n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 12,
                    "columnNumber" : 26,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) { /* <=== Patient */ \n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID());\n        System.out.println(patID);"
                  },
                  {
                    "sample" : "pat",
                    "lineNumber" : 16,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID()); /* <=== Patient */ \n        System.out.println(patID);\n\n    }\n}"
                  },
                  {
                    "sample" : "this",
                    "lineNumber" : 356,
                    "columnNumber" : -1,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "        this.symptoms = symptoms;\n    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() { /* <===  */ \n        return patientID;\n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;"
                  },
                  {
                    "sample" : "this.patientID",
                    "lineNumber" : 357,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() {\n        return patientID; /* <===  */ \n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;\n    }"
                  },
                  {
                    "sample" : "return patientID;",
                    "lineNumber" : 357,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() {\n        return patientID; /* <===  */ \n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;\n    }"
                  },
                  {
                    "sample" : "RET",
                    "lineNumber" : 356,
                    "columnNumber" : 12,
                    "fileName" : "MediForm/src/main/java/Patient.java",
                    "excerpt" : "        this.symptoms = symptoms;\n    }\n\n    //patient\n    //get and set patientID\n    public String getPatientID() { /* <===  */ \n        return patientID;\n    }\n\n    public void setPatientID(String patientID) {\n        this.patientID = patientID;"
                  },
                  {
                    "sample" : "pat.getPatientID()",
                    "lineNumber" : 16,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID()); /* <=== Patient.getPatientID */ \n        System.out.println(patID);\n\n    }\n}"
                  },
                  {
                    "sample" : "System.out.println(pat.getPatientID())",
                    "lineNumber" : 16,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID()); /* <=== java.io.PrintStream.println */ \n        System.out.println(patID);\n\n    }\n}"
                  }
                ]
              },
              {
                "pathId" : "74-73-75-8630-7391-7401-7420-7416",
                "path" : [
                  {
                    "sample" : "\"patientID\"",
                    "lineNumber" : 39,
                    "columnNumber" : 26,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "\n    public static Patient findPatient(String patientID) {  \n        Patient patientReturn = new Patient();\n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID); /* <===  */ \n\n        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {\n            while (cursorPatient.hasNext()) {\n                patientReturn = cursorPatient.next();\n            }"
                  },
                  {
                    "sample" : "wherePatient",
                    "lineNumber" : 39,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "\n    public static Patient findPatient(String patientID) {  \n        Patient patientReturn = new Patient();\n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID); /* <=== ANY */ \n\n        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {\n            while (cursorPatient.hasNext()) {\n                patientReturn = cursorPatient.next();\n            }"
                  },
                  {
                    "sample" : "patientID",
                    "lineNumber" : 39,
                    "columnNumber" : 39,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "\n    public static Patient findPatient(String patientID) {  \n        Patient patientReturn = new Patient();\n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID); /* <=== java.lang.String */ \n\n        try (MongoCursor<Patient> cursorPatient = collectionPatient.find(wherePatient).iterator()) {\n            while (cursorPatient.hasNext()) {\n                patientReturn = cursorPatient.next();\n            }"
                  },
                  {
                    "sample" : "String patientID",
                    "lineNumber" : 35,
                    "columnNumber" : 39,
                    "fileName" : "MediForm/src/main/java/DatabaseInterface.java",
                    "excerpt" : "\n    public static void insertPatient(Patient patientInsert) {\n        collectionPatient.insertOne(patientInsert);\n    }\n\n    public static Patient findPatient(String patientID) {   /* <===  */ \n        Patient patientReturn = new Patient();\n        \n        BasicDBObject wherePatient = new BasicDBObject();\n        wherePatient.put(\"patientID\", patientID);\n"
                  },
                  {
                    "sample" : "patID",
                    "lineNumber" : 8,
                    "columnNumber" : 45,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "        Patient pat = new Patient();\n        String patID = \"6074fba91477040008b0c736\";\n\n        System.out.println(pat.getPatientID());\n\n        pat = DatabaseInterface.findPatient(patID); /* <=== java.lang.String */ \n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");"
                  },
                  {
                    "sample" : "patID",
                    "lineNumber" : 12,
                    "columnNumber" : 13,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "\n        pat = DatabaseInterface.findPatient(patID);\n\n        System.out.println(pat.getName());\n\n        if(!patID.equals(pat.getPatientID())) { /* <=== java.lang.String */ \n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID());\n        System.out.println(patID);"
                  },
                  {
                    "sample" : "patID",
                    "lineNumber" : 17,
                    "columnNumber" : 28,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID());\n        System.out.println(patID); /* <=== java.lang.String */ \n\n    }\n}"
                  },
                  {
                    "sample" : "System.out.println(patID)",
                    "lineNumber" : 17,
                    "columnNumber" : 9,
                    "fileName" : "MediForm/src/main/java/test.java",
                    "excerpt" : "        if(!patID.equals(pat.getPatientID())) {\n            System.out.println(\"Not equal\");\n        }\n\n        System.out.println(pat.getPatientID());\n        System.out.println(patID); /* <=== java.io.PrintStream.println */ \n\n    }\n}"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "third_parties" : [
      {
        "sourceId" : "Data.Sensitive.LocationData.PreciseLocation",
        "sinks" : [
          {
            "sinkType" : "third_parties",
            "id" : "Sinks.ThirdParties.API",
            "name" : "Third Party API",
            "category" : "",
            "domains" : [
            ],
            "sensitivity" : "",
            "isSensitive" : false,
            "tags" : {
              
            },
            "apiUrl" : [
              "API"
            ],
            "databaseDetails" : {
              "dbName" : "",
              "dbVendor" : "",
              "dbLocation" : "",
              "dbOperation" : "",
              "configFile" : "",
              "schema" : null
            },
            "paths" : [
              {
                "pathId" : "7237-7256-7250-7249-7261-7208-7268-7265-7264-7270-7276-7295-7294",
                "path" : [
                  {
                    "sample" : "longitude",
                    "lineNumber" : 10,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "import java.io.InputStreamReader;\n\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value /* <=== double */ \n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n"
                  },
                  {
                    "sample" : "longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 85,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "\"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 29,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <===  */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 14,
                    "columnNumber" : 20,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== java.lang.String */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 16,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.lang.String */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 16,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.net.URL */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "(HttpURLConnection) url.openConnection()",
                    "lineNumber" : 17,
                    "columnNumber" : 44,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <===  */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 17,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.HttpURLConnection */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 18,
                    "columnNumber" : 13,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\"); /* <=== java.net.HttpURLConnection */ \n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 20,
                    "columnNumber" : 32,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode(); /* <=== java.net.HttpURLConnection */ \n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {"
                  },
                  {
                    "sample" : "connection",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  },
                  {
                    "sample" : "connection.getInputStream()",
                    "lineNumber" : 22,
                    "columnNumber" : 82,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())); /* <=== java.net.HttpURLConnection.getInputStream */ \n                String response;\n                StringBuilder sb = new StringBuilder();\n                while ((response = reader.readLine()) != null) {\n                    sb.append(response);\n                }"
                  }
                ]
              },
              {
                "pathId" : "7233-7254-7250-7249-7261-7208-7268-7267",
                "path" : [
                  {
                    "sample" : "latitude",
                    "lineNumber" : 9,
                    "columnNumber" : 16,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class ThirdPartyApiCall {\n    public static void main(String[] args) {\n        double latitude = 37.7749; // Example latitude valu /* <=== double */ \n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;"
                  },
                  {
                    "sample" : "latitude",
                    "lineNumber" : 14,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== double */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "\"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude",
                    "lineNumber" : 14,
                    "columnNumber" : 29,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <===  */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 14,
                    "columnNumber" : 20,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double latitude = 37.7749; // Example latitude valu\n        double longitude = -122.4194; // Example longitude value\n        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude; /* <=== java.lang.String */ \n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n"
                  },
                  {
                    "sample" : "apiUrl",
                    "lineNumber" : 16,
                    "columnNumber" : 31,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.lang.String */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 16,
                    "columnNumber" : 17,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "        double drivingLicence = -122.4194; // Example longitude value\n\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl); /* <=== java.net.URL */ \n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {"
                  },
                  {
                    "sample" : "url",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  },
                  {
                    "sample" : "url.openConnection()",
                    "lineNumber" : 17,
                    "columnNumber" : 64,
                    "fileName" : "MediForm/src/main/java/slack.java",
                    "excerpt" : "\n        try {\n            String apiUrl = \"http://localhost/endpoint?lat=\" + latitude + \"&lng=\" + longitude;\n\n            URL url = new URL(apiUrl);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection(); /* <=== java.net.URL.openConnection */ \n            connection.setRequestMethod(\"GET\");\n\n            int responseCode = connection.getResponseCode();\n            if (responseCode == HttpURLConnection.HTTP_OK) {\n                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}